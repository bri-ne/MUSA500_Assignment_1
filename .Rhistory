kable_material%>%footnote(general_title = "Stepwise ANOVA  Table 5")
steptable
steptable<- kbl(stepoutput)%>%
kable_material%>%footnote(general_title = "Stepwise ANOVA  Table 5")
#use step and step$anova commands in the MASS library to run stepwise
#regression and determine the best model based on the Akaike Information
#Criterion. Save the step$anova output
step <- stepAIC(fit, direction="both")
# Save output of step$anova for markdown!
stepoutput <- step$anova
steptable<- kbl(stepoutput)%>%
kable_material%>%footnote(general_title = "Stepwise ANOVA Table 5")
steptable
#use step and step$anova commands in the MASS library to run stepwise
#regression and determine the best model based on the Akaike Information
#Criterion. Save the step$anova output
step <- stepAIC(fit, direction="both")
# Save output of step$anova for markdown!
stepoutput <- step$anova
steptable<- kbl(stepoutput)%>%
kable_material%>%footnote(general_title = "Stepwise ANOVA",general= "Table 5")
steptable
#new column saving predicted values
ourdata$predvals2 <- fitted(fit2)
#adding to geom too for mapping
ourdata_geom$predvals2 <- fitted(fit2)
ourdata_geom$predvals <- fitted(fit) #### from our first model
#new column saving residuals
ourdata$resids2 <- residuals(fit2)
#adding to geom too for mapping
ourdata_geom$resids2 <- residuals(fit2)
ourdata_geom$resids <- residuals(fit) #### from our first model
#New column saving standardized residuals
ourdata$stdres2 <- rstandard(fit2)
#adding to geom too for mapping
ourdata_geom$stdres2 <- rstandard(fit2)
ourdata_geom$stdres <- rstandard(fit)#### from our first model
#### I'm not sure we need this scatter plot -- BRi
# Create a scatterplot with standardized residuals on Y axis and
# Predicted Values on x axis.
ResidualPlot2<- ggplot(ourdata, aes(x = predvals2, y= stdres2))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals')
ResidualPlot2
#### we do need this Histogram thought --- Bri
Residhists <- histogram( ~ stdres +stdres2,layout=c(2,1),data = ourdata,
main='Standardized Regression Residuals From Both Models', xlab='regressing on all variables (LEFT) and regressing on only income and vacancy (RIGHT)', sub= 'Figure 3', col="#B3CDE3", breaks = 50, scales='free')
Residhists
#getting Jenks Breaks for LNMEDHVAL
standres2classes <- classIntervals(ourdata_geom$stdres2, n = 5, style = "jenks")
standres2classes$brks
typeof(ourdata_geom$stdres2)
#we'll create a new column in our sf object using the base R cut() function to cut up our percent variable into distinct groups.
ourdata_geom <- ourdata_geom %>%
mutate(stdresclass2 = cut(stdres2, standres2classes$brks, include.lowest = T))
#mapping
choro_stdresclass2 <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass2),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals for Our Second Model\n in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 4") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass2
#### doing this for our first model's resids just in case,
#getting Jenks Breaks for LNMEDHVAL
standresclasses <- classIntervals(ourdata_geom$stdres, n = 5, style = "jenks")
standresclasses$brks
typeof(ourdata_geom$stdres)
#we'll create a new column in our sf object using the base R cut() function to cut up our percent variable into distinct groups.
ourdata_geom <- ourdata_geom %>%
mutate(stdresclass = cut(stdres, standresclasses$brks, include.lowest = T))
#mapping
choro_stdresclass <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals for Our First Model\n in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 3") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass
stdres_maps_both <- plot_grid( choro_stdresclass,
choro_stdresclass2,
#labels = c("% Below Poverty (LN)",
#        "Bachelors Degree",
#       "% Vacant Homes",
#      "% Single House Units"),
#label_x =-.1,
#label_y = 1.01,
scale= 0.9,
align = 'hv',
ncol = 2, nrow = 1)
stdres_maps_both
#new column saving predicted values
ourdata$predvals2 <- fitted(fit2)
#adding to geom too for mapping
ourdata_geom$predvals2 <- fitted(fit2)
ourdata_geom$predvals <- fitted(fit) #### from our first model
#new column saving residuals
ourdata$resids2 <- residuals(fit2)
#adding to geom too for mapping
ourdata_geom$resids2 <- residuals(fit2)
ourdata_geom$resids <- residuals(fit) #### from our first model
#New column saving standardized residuals
ourdata$stdres2 <- rstandard(fit2)
#adding to geom too for mapping
ourdata_geom$stdres2 <- rstandard(fit2)
ourdata_geom$stdres <- rstandard(fit)#### from our first model
#### I'm not sure we need this scatter plot -- BRi
# Create a scatterplot with standardized residuals on Y axis and
# Predicted Values on x axis.
ResidualPlot2<- ggplot(ourdata, aes(x = predvals2, y= stdres2))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals')
ResidualPlot2
#### we do need this Histogram thought --- Bri
Residhists <- histogram( ~ stdres +stdres2,layout=c(2,1),data = ourdata,
main='Standardized Regression Residuals From Both Models', xlab='regressing on all variables (LEFT) and regressing on only income and vacancy (RIGHT)', sub= 'Figure 3', col="#B3CDE3", breaks = 50, scales='free')
Residhists
#getting Jenks Breaks for LNMEDHVAL
standres2classes <- classIntervals(ourdata_geom$stdres2, n = 5, style = "jenks")
standres2classes$brks
typeof(ourdata_geom$stdres2)
#we'll create a new column in our sf object using the base R cut() function to cut up our percent variable into distinct groups.
ourdata_geom <- ourdata_geom %>%
mutate(stdresclass2 = cut(stdres2, standres2classes$brks, include.lowest = T))
#mapping
choro_stdresclass2 <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass2),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals for Our Second Model\n in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 4") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass2
#### doing this for our first model's resids just in case,
#getting Jenks Breaks for LNMEDHVAL
standresclasses <- classIntervals(ourdata_geom$stdres, n = 5, style = "jenks")
standresclasses$brks
typeof(ourdata_geom$stdres)
#we'll create a new column in our sf object using the base R cut() function to cut up our percent variable into distinct groups.
ourdata_geom <- ourdata_geom %>%
mutate(stdresclass = cut(stdres, standresclasses$brks, include.lowest = T))
#mapping
choro_stdresclass <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals for Our First Model\n in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 3") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass
stdres_maps_both <- plot_grid( choro_stdresclass,
choro_stdresclass2,
#labels = c("% Below Poverty (LN)",
#        "Bachelors Degree",
#       "% Vacant Homes",
#      "% Single House Units"),
#label_x =-.1,
#label_y = 1.01,
scale= 0.9,
align = 'hv',
ncol = 2, nrow = 1)
stdres_maps_both
ResidualPlot2
Residhists
ResidualPlot<- ggplot(ourdata, aes(x = predvals, y= stdres))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals')
ggplot(ourdata, aes(x = predvals, y= stdres))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals')
#***********final grid to include in markdown *******************
scattergrid
summary_table
hists
LNhists
#### THIS CHUNK INCLUDE CORR CODE AND OUTPUT
#---- Step 1C: Pearson Correlations ----
#make new df that just has our predictors and dependent variable
pred_var <- ourdata%>%dplyr::select(LNMEDHVAL, LNBELPOV100, PCTBACHMOR, PCTSINGLES, PCTVACANT)
pcorr <- cor(pred_var, method="pearson")
#Observe that there isnt severe multicollinearity (i.e., no correlations where
# r>.8 or r<-.8), so we can include all four predictors in the regression.
#*********matrix for markdown*****************************************
pcorr <- pcorr%>%kable(digits = c(4, 4, 4, 4, 4),
align = c("l", "r", "r", "r", "r"))%>%kable_styling()%>%footnote(general_title = "Pearson's Correlation of Predictors",
general = "Table 1")
pcorr
ResidualPlot<- ggplot(ourdata, aes(x = predvals, y= stdres))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals')
ResidualPlot
Residhists <- histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals From Both Models', xlab='regressing on all variables (LEFT) and regressing on only income and vacancy (RIGHT)', sub= 'Figure 3', col="#B3CDE3", breaks = 50, scales='free')
Residhists
Residhists <- histogram( ~ stdres +stdres2,layout=c(2,1),data = ourdata,
main='Standardized Regression Residuals From Both Models', xlab='regressing on all variables (LEFT) and regressing on only income and vacancy (RIGHT)', sub= 'Figure 3', col="#B3CDE3", breaks = 50, scales='free')
stdr.reshist <- histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals From Both Models', xlab='regressing on all variables (LEFT) and regressing on only income and vacancy (RIGHT)', sub= 'Figure 3', col="#B3CDE3", breaks = 50, scales='free')
stdr.reshist <- histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
sub= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
ResidualPlot
ResidualPlot
ResidualPlot
ResidualPlot<- ggplot(ourdata, aes(x = predvals, y= stdres))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(title = 'Standardized Residual by Predicted Value',
x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals')
ResidualPlot
stdr.reshist <- histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
sub= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
ResidualPlot<- ggplot(ourdata, aes(x = predvals, y= stdres))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(title = 'Standardized Residual by Predicted Value',
x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals',
caption = 'Figure 5')
ResidualPlot
stdr.reshist <- histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
caption= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
stdr.reshist <- histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
sub= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
stdr.reshist <- ggplot()+
geom_histogram(data = ourdata$stdres)
stdr.reshist <- ggplot()+
geom_histogram(data = ourdata)
histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
sub= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
stdr.reshist <- histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
sub= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
ggplot(ourdata)+
geomhist(aes(ourdata$stdres))
ggplot(ourdata)+
geom_histogram(aes(ourdata$stdres))
ggplot(ourdata)+
geom_histogram(aes(ourdata$stdres),
bins = 50)
stdr.reshist <- ggplot(ourdata)+
geom_histogram(aes(ourdata$stdres),
bins = 50)
histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
sub= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
stdr.reshist <-  histogram( ~ stdres,data = ourdata,
main='Standardized Regression Residuals Histogram',
sub= 'Figure 4',
col="#B3CDE3",
breaks = 50,
scales='free')
stdr.reshist
View(ourdata)
ResidualPlot<- ggplot(ourdata, aes(x = predvals, y= stdres))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(title = 'Standardized Residual by Predicted Value',
x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals',
caption = 'Figure 5')
ResidualPlot
choro_stdresclass
choro_stdresclass <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 3") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass
choro_stdresclass
standresclasses <- classIntervals(ourdata_geom$stdres, n = 5, style = "jenks")
standresclasses$brks
typeof(ourdata_geom$stdres)
#we'll create a new column in our sf object using the base R cut() function to cut up our percent variable into distinct groups.
ourdata_geom <- ourdata_geom %>%
mutate(stdresclass = cut(stdres, standresclasses$brks, include.lowest = T))
choro_stdresclass <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 3") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass
choro_stdresclass
#new column saving predicted values
ourdata$predvals2 <- fitted(fit2)
#adding to geom too for mapping
ourdata_geom$predvals2 <- fitted(fit2)
ourdata_geom$predvals <- fitted(fit) #### from our first model
#new column saving residuals
ourdata$resids2 <- residuals(fit2)
#adding to geom too for mapping
ourdata_geom$resids2 <- residuals(fit2)
ourdata_geom$resids <- residuals(fit) #### from our first model
#New column saving standardized residuals
ourdata$stdres2 <- rstandard(fit2)
#adding to geom too for mapping
ourdata_geom$stdres2 <- rstandard(fit2)
ourdata_geom$stdres <- rstandard(fit)#### from our first model
#### I'm not sure we need this scatter plot -- BRi
# Create a scatterplot with standardized residuals on Y axis and
# Predicted Values on x axis.
ResidualPlot2<- ggplot(ourdata, aes(x = predvals2, y= stdres2))+
geom_point(size=1.5, color = 'darkslateblue', alpha = .5)+
geom_hline(yintercept=0, size = .5)+
labs(x = 'Predicted Median House Value ($)',
y = 'Standardized Residuals')
ResidualPlot2
#### we do need this Histogram thought --- Bri
Residhists <- histogram( ~ stdres +stdres2,layout=c(2,1),data = ourdata,
main='Standardized Regression Residuals From Both Models', xlab='regressing on all variables (LEFT) and regressing on only income and vacancy (RIGHT)', sub= 'Figure 3', col="#B3CDE3", breaks = 50, scales='free')
Residhists
#getting Jenks Breaks for LNMEDHVAL
standres2classes <- classIntervals(ourdata_geom$stdres2, n = 5, style = "jenks")
standres2classes$brks
typeof(ourdata_geom$stdres2)
#we'll create a new column in our sf object using the base R cut() function to cut up our percent variable into distinct groups.
ourdata_geom <- ourdata_geom %>%
mutate(stdresclass2 = cut(stdres2, standres2classes$brks, include.lowest = T))
#mapping
choro_stdresclass2 <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass2),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals for Our Second Model\n in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 4") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass2
#### doing this for our first model's resids just in case,
#getting Jenks Breaks for LNMEDHVAL
standresclasses <- classIntervals(ourdata_geom$stdres, n = 5, style = "jenks")
standresclasses$brks
typeof(ourdata_geom$stdres)
#we'll create a new column in our sf object using the base R cut() function to cut up our percent variable into distinct groups.
ourdata_geom <- ourdata_geom %>%
mutate(stdresclass = cut(stdres, standresclasses$brks, include.lowest = T))
#mapping
choro_stdresclass <- ggplot() +
geom_sf(data = ourdata_geom,
aes(fill = stdresclass),
alpha = 1,
colour = NA,
size = 0.15) +
scale_fill_brewer(palette = "PuBu",
name = "LN Median House Value") +
labs(x = NULL, y = NULL,
title = "Standardized Residuals for Our First Model\n in Philadelphia by Block Group",
subtitle = "Source: U.S. Census",
caption= "Map 3") +
theme(line = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.background = element_blank())
choro_stdresclass
stdres_maps_both <- plot_grid( choro_stdresclass,
choro_stdresclass2,
#labels = c("% Below Poverty (LN)",
#        "Bachelors Degree",
#       "% Vacant Homes",
#      "% Single House Units"),
#label_x =-.1,
#label_y = 1.01,
scale= 0.9,
align = 'hv',
ncol = 2, nrow = 1)
stdres_maps_both
choro_stdresclass
#use step and step$anova commands in the MASS library to run stepwise
#regression and determine the best model based on the Akaike Information
#Criterion. Save the step$anova output
step <- stepAIC(fit, direction="both")
# Save output of step$anova for markdown!
stepoutput <- step$anova
steptable<- kbl(stepoutput)%>%
kable_material%>%footnote(general_title = "Stepwise ANOVA",general= "Table 5")
steptable
#In the output:
#Predicted (Predicted values using all observations)
#cvpred (cross-validation predictions)
#CV residual = y (in this case, MEDHHINC) - cvpred
cv <- CVlm(data=ourdata, fit, m=5)
#Extracting MSEs
mse <- attr(cv, "ms")
mse
rmse <- sqrt(mse)
rmse
#CROSS-VALIDATION
#Model 2
fit2 <- lm(LNMEDHVAL ~ MEDHHINC + PCTVACANT , data=ourdata)
summary(fit2)
anova(fit2)
#Model
#fit <- lm(MEDHHINC ~ PCTVACANT + MEDHVAL + PCTSINGLES, data=ourdata)
#summary(fit)
#anova(fit)
cv2 <- CVlm(data=ourdata, fit2, m=5)
#Extracting MSEs
mse2 <- attr(cv2, "ms")
mse2
rmse2 <- sqrt(mse2)
rmse2
